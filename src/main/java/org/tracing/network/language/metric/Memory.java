// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JVMMetric.proto

package org.tracing.network.language.metric;

/**
 * Protobuf type {@code deeptracing.v1.Memory}
 */
public final class Memory extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:deeptracing.v1.Memory)
    MemoryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Memory.newBuilder() to construct.
  private Memory(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Memory() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new Memory();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return JVMMetricOuterClass.internal_static_deeptracing_v1_Memory_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return JVMMetricOuterClass.internal_static_deeptracing_v1_Memory_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            Memory.class, Builder.class);
  }

  public static final int ISHEAP_FIELD_NUMBER = 1;
  private boolean isHeap_ = false;
  /**
   * <code>bool isHeap = 1;</code>
   * @return The isHeap.
   */
  @Override
  public boolean getIsHeap() {
    return isHeap_;
  }

  public static final int INIT_FIELD_NUMBER = 2;
  private long init_ = 0L;
  /**
   * <code>int64 init = 2;</code>
   * @return The init.
   */
  @Override
  public long getInit() {
    return init_;
  }

  public static final int MAX_FIELD_NUMBER = 3;
  private long max_ = 0L;
  /**
   * <code>int64 max = 3;</code>
   * @return The max.
   */
  @Override
  public long getMax() {
    return max_;
  }

  public static final int USED_FIELD_NUMBER = 4;
  private long used_ = 0L;
  /**
   * <code>int64 used = 4;</code>
   * @return The used.
   */
  @Override
  public long getUsed() {
    return used_;
  }

  public static final int COMMITTED_FIELD_NUMBER = 5;
  private long committed_ = 0L;
  /**
   * <code>int64 committed = 5;</code>
   * @return The committed.
   */
  @Override
  public long getCommitted() {
    return committed_;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (isHeap_ != false) {
      output.writeBool(1, isHeap_);
    }
    if (init_ != 0L) {
      output.writeInt64(2, init_);
    }
    if (max_ != 0L) {
      output.writeInt64(3, max_);
    }
    if (used_ != 0L) {
      output.writeInt64(4, used_);
    }
    if (committed_ != 0L) {
      output.writeInt64(5, committed_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (isHeap_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, isHeap_);
    }
    if (init_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, init_);
    }
    if (max_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, max_);
    }
    if (used_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, used_);
    }
    if (committed_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, committed_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof Memory)) {
      return super.equals(obj);
    }
    Memory other = (Memory) obj;

    if (getIsHeap()
        != other.getIsHeap()) return false;
    if (getInit()
        != other.getInit()) return false;
    if (getMax()
        != other.getMax()) return false;
    if (getUsed()
        != other.getUsed()) return false;
    if (getCommitted()
        != other.getCommitted()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ISHEAP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsHeap());
    hash = (37 * hash) + INIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInit());
    hash = (37 * hash) + MAX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMax());
    hash = (37 * hash) + USED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUsed());
    hash = (37 * hash) + COMMITTED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCommitted());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static Memory parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Memory parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Memory parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Memory parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Memory parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static Memory parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static Memory parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Memory parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static Memory parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static Memory parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static Memory parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static Memory parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(Memory prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code deeptracing.v1.Memory}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:deeptracing.v1.Memory)
          MemoryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return JVMMetricOuterClass.internal_static_deeptracing_v1_Memory_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return JVMMetricOuterClass.internal_static_deeptracing_v1_Memory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Memory.class, Builder.class);
    }

    // Construct using org.network.language.jvmmetric.Memory.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      isHeap_ = false;
      init_ = 0L;
      max_ = 0L;
      used_ = 0L;
      committed_ = 0L;
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return JVMMetricOuterClass.internal_static_deeptracing_v1_Memory_descriptor;
    }

    @Override
    public Memory getDefaultInstanceForType() {
      return Memory.getDefaultInstance();
    }

    @Override
    public Memory build() {
      Memory result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public Memory buildPartial() {
      Memory result = new Memory(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(Memory result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.isHeap_ = isHeap_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.init_ = init_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.max_ = max_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.used_ = used_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.committed_ = committed_;
      }
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof Memory) {
        return mergeFrom((Memory)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(Memory other) {
      if (other == Memory.getDefaultInstance()) return this;
      if (other.getIsHeap() != false) {
        setIsHeap(other.getIsHeap());
      }
      if (other.getInit() != 0L) {
        setInit(other.getInit());
      }
      if (other.getMax() != 0L) {
        setMax(other.getMax());
      }
      if (other.getUsed() != 0L) {
        setUsed(other.getUsed());
      }
      if (other.getCommitted() != 0L) {
        setCommitted(other.getCommitted());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              isHeap_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              init_ = input.readInt64();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              max_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              used_ = input.readInt64();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              committed_ = input.readInt64();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean isHeap_ ;
    /**
     * <code>bool isHeap = 1;</code>
     * @return The isHeap.
     */
    @Override
    public boolean getIsHeap() {
      return isHeap_;
    }
    /**
     * <code>bool isHeap = 1;</code>
     * @param value The isHeap to set.
     * @return This builder for chaining.
     */
    public Builder setIsHeap(boolean value) {

      isHeap_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>bool isHeap = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsHeap() {
      bitField0_ = (bitField0_ & ~0x00000001);
      isHeap_ = false;
      onChanged();
      return this;
    }

    private long init_ ;
    /**
     * <code>int64 init = 2;</code>
     * @return The init.
     */
    @Override
    public long getInit() {
      return init_;
    }
    /**
     * <code>int64 init = 2;</code>
     * @param value The init to set.
     * @return This builder for chaining.
     */
    public Builder setInit(long value) {

      init_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>int64 init = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInit() {
      bitField0_ = (bitField0_ & ~0x00000002);
      init_ = 0L;
      onChanged();
      return this;
    }

    private long max_ ;
    /**
     * <code>int64 max = 3;</code>
     * @return The max.
     */
    @Override
    public long getMax() {
      return max_;
    }
    /**
     * <code>int64 max = 3;</code>
     * @param value The max to set.
     * @return This builder for chaining.
     */
    public Builder setMax(long value) {

      max_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int64 max = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMax() {
      bitField0_ = (bitField0_ & ~0x00000004);
      max_ = 0L;
      onChanged();
      return this;
    }

    private long used_ ;
    /**
     * <code>int64 used = 4;</code>
     * @return The used.
     */
    @Override
    public long getUsed() {
      return used_;
    }
    /**
     * <code>int64 used = 4;</code>
     * @param value The used to set.
     * @return This builder for chaining.
     */
    public Builder setUsed(long value) {

      used_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int64 used = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUsed() {
      bitField0_ = (bitField0_ & ~0x00000008);
      used_ = 0L;
      onChanged();
      return this;
    }

    private long committed_ ;
    /**
     * <code>int64 committed = 5;</code>
     * @return The committed.
     */
    @Override
    public long getCommitted() {
      return committed_;
    }
    /**
     * <code>int64 committed = 5;</code>
     * @param value The committed to set.
     * @return This builder for chaining.
     */
    public Builder setCommitted(long value) {

      committed_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int64 committed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommitted() {
      bitField0_ = (bitField0_ & ~0x00000010);
      committed_ = 0L;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:deeptracing.v1.Memory)
  }

  // @@protoc_insertion_point(class_scope:deeptracing.v1.Memory)
  private static final Memory DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Memory();
  }

  public static Memory getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Memory>
      PARSER = new com.google.protobuf.AbstractParser<Memory>() {
    @Override
    public Memory parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Memory> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<Memory> getParserForType() {
    return PARSER;
  }

  @Override
  public Memory getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

