// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tracing.proto

package org.tracing.network.language.tracing;

/**
 * <pre>
 * The segment is a collection of spans. It includes all collected spans in a simple one request context, such as a HTTP request process.
 *
 * We recommend the agent/SDK report all tracked data of one request once for all.
 * Typically, such as in Java, one segment represent all tracked operations(spans) of one request context in the same thread.
 * At the same time, in some language there is not a clear `thread` concept like golang.
 * Then, it could represent all tracked operations of one request context cross threads/goroutines.
 * </pre>
 *
 * Protobuf type {@code deeptracing.v1.SegmentObject}
 */
public final class SegmentObject extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:deeptracing.v1.SegmentObject)
    SegmentObjectOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SegmentObject.newBuilder() to construct.
  private SegmentObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SegmentObject() {
    traceId_ = "";
    traceSegmentId_ = "";
    spans_ = java.util.Collections.emptyList();
    service_ = "";
    serviceInstance_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SegmentObject();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tracing.network.language.tracing.Tracing.internal_static_deeptracing_v1_SegmentObject_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tracing.network.language.tracing.Tracing.internal_static_deeptracing_v1_SegmentObject_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tracing.network.language.tracing.SegmentObject.class, org.tracing.network.language.tracing.SegmentObject.Builder.class);
  }

  public static final int TRACEID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object traceId_ = "";
  /**
   * <pre>
   * A string id represents the whole trace.
   * </pre>
   *
   * <code>string traceId = 1;</code>
   * @return The traceId.
   */
  @java.lang.Override
  public java.lang.String getTraceId() {
    java.lang.Object ref = traceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      traceId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A string id represents the whole trace.
   * </pre>
   *
   * <code>string traceId = 1;</code>
   * @return The bytes for traceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTraceIdBytes() {
    java.lang.Object ref = traceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      traceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRACESEGMENTID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object traceSegmentId_ = "";
  /**
   * <pre>
   * A unique id represents this segment. Other segments could use this id to reference as a child segment.
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The traceSegmentId.
   */
  @java.lang.Override
  public java.lang.String getTraceSegmentId() {
    java.lang.Object ref = traceSegmentId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      traceSegmentId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A unique id represents this segment. Other segments could use this id to reference as a child segment.
   * </pre>
   *
   * <code>string traceSegmentId = 2;</code>
   * @return The bytes for traceSegmentId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTraceSegmentIdBytes() {
    java.lang.Object ref = traceSegmentId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      traceSegmentId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SPANS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<org.tracing.network.language.tracing.SpanObject> spans_;
  /**
   * <pre>
   * Span collections included in this segment.
   * </pre>
   *
   * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
   */
  @java.lang.Override
  public java.util.List<org.tracing.network.language.tracing.SpanObject> getSpansList() {
    return spans_;
  }
  /**
   * <pre>
   * Span collections included in this segment.
   * </pre>
   *
   * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends org.tracing.network.language.tracing.SpanObjectOrBuilder> 
      getSpansOrBuilderList() {
    return spans_;
  }
  /**
   * <pre>
   * Span collections included in this segment.
   * </pre>
   *
   * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
   */
  @java.lang.Override
  public int getSpansCount() {
    return spans_.size();
  }
  /**
   * <pre>
   * Span collections included in this segment.
   * </pre>
   *
   * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
   */
  @java.lang.Override
  public org.tracing.network.language.tracing.SpanObject getSpans(int index) {
    return spans_.get(index);
  }
  /**
   * <pre>
   * Span collections included in this segment.
   * </pre>
   *
   * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
   */
  @java.lang.Override
  public org.tracing.network.language.tracing.SpanObjectOrBuilder getSpansOrBuilder(
      int index) {
    return spans_.get(index);
  }

  public static final int SERVICE_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object service_ = "";
  /**
   * <pre>
   * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
   *
   * The logic name represents the service. This would show as a separate node in the topology.
   * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
   * </pre>
   *
   * <code>string service = 4;</code>
   * @return The service.
   */
  @java.lang.Override
  public java.lang.String getService() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      service_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
   *
   * The logic name represents the service. This would show as a separate node in the topology.
   * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
   * </pre>
   *
   * <code>string service = 4;</code>
   * @return The bytes for service.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceBytes() {
    java.lang.Object ref = service_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      service_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVICEINSTANCE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object serviceInstance_ = "";
  /**
   * <pre>
   * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
   * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
   *
   * The logic name represents the service instance. This would show as a separate node in the instance relationship.
   * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
   * </pre>
   *
   * <code>string serviceInstance = 5;</code>
   * @return The serviceInstance.
   */
  @java.lang.Override
  public java.lang.String getServiceInstance() {
    java.lang.Object ref = serviceInstance_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serviceInstance_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
   * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
   *
   * The logic name represents the service instance. This would show as a separate node in the instance relationship.
   * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
   * </pre>
   *
   * <code>string serviceInstance = 5;</code>
   * @return The bytes for serviceInstance.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServiceInstanceBytes() {
    java.lang.Object ref = serviceInstance_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serviceInstance_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ISSIZELIMITED_FIELD_NUMBER = 6;
  private boolean isSizeLimited_ = false;
  /**
   * <pre>
   * Whether the segment includes all tracked spans.
   * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
   * The agent/SDK could optimize or ignore some tracked spans for better performance.
   * In this case, the value should be flagged as TRUE.
   * </pre>
   *
   * <code>bool isSizeLimited = 6;</code>
   * @return The isSizeLimited.
   */
  @java.lang.Override
  public boolean getIsSizeLimited() {
    return isSizeLimited_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, traceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, traceSegmentId_);
    }
    for (int i = 0; i < spans_.size(); i++) {
      output.writeMessage(3, spans_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, service_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceInstance_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serviceInstance_);
    }
    if (isSizeLimited_ != false) {
      output.writeBool(6, isSizeLimited_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, traceId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(traceSegmentId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, traceSegmentId_);
    }
    for (int i = 0; i < spans_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, spans_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(service_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, service_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serviceInstance_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serviceInstance_);
    }
    if (isSizeLimited_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, isSizeLimited_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tracing.network.language.tracing.SegmentObject)) {
      return super.equals(obj);
    }
    org.tracing.network.language.tracing.SegmentObject other = (org.tracing.network.language.tracing.SegmentObject) obj;

    if (!getTraceId()
        .equals(other.getTraceId())) return false;
    if (!getTraceSegmentId()
        .equals(other.getTraceSegmentId())) return false;
    if (!getSpansList()
        .equals(other.getSpansList())) return false;
    if (!getService()
        .equals(other.getService())) return false;
    if (!getServiceInstance()
        .equals(other.getServiceInstance())) return false;
    if (getIsSizeLimited()
        != other.getIsSizeLimited()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRACEID_FIELD_NUMBER;
    hash = (53 * hash) + getTraceId().hashCode();
    hash = (37 * hash) + TRACESEGMENTID_FIELD_NUMBER;
    hash = (53 * hash) + getTraceSegmentId().hashCode();
    if (getSpansCount() > 0) {
      hash = (37 * hash) + SPANS_FIELD_NUMBER;
      hash = (53 * hash) + getSpansList().hashCode();
    }
    hash = (37 * hash) + SERVICE_FIELD_NUMBER;
    hash = (53 * hash) + getService().hashCode();
    hash = (37 * hash) + SERVICEINSTANCE_FIELD_NUMBER;
    hash = (53 * hash) + getServiceInstance().hashCode();
    hash = (37 * hash) + ISSIZELIMITED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsSizeLimited());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tracing.network.language.tracing.SegmentObject parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tracing.network.language.tracing.SegmentObject prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The segment is a collection of spans. It includes all collected spans in a simple one request context, such as a HTTP request process.
   *
   * We recommend the agent/SDK report all tracked data of one request once for all.
   * Typically, such as in Java, one segment represent all tracked operations(spans) of one request context in the same thread.
   * At the same time, in some language there is not a clear `thread` concept like golang.
   * Then, it could represent all tracked operations of one request context cross threads/goroutines.
   * </pre>
   *
   * Protobuf type {@code deeptracing.v1.SegmentObject}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:deeptracing.v1.SegmentObject)
      org.tracing.network.language.tracing.SegmentObjectOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tracing.network.language.tracing.Tracing.internal_static_deeptracing_v1_SegmentObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tracing.network.language.tracing.Tracing.internal_static_deeptracing_v1_SegmentObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tracing.network.language.tracing.SegmentObject.class, org.tracing.network.language.tracing.SegmentObject.Builder.class);
    }

    // Construct using org.tracing.network.language.tracing.SegmentObject.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      traceId_ = "";
      traceSegmentId_ = "";
      if (spansBuilder_ == null) {
        spans_ = java.util.Collections.emptyList();
      } else {
        spans_ = null;
        spansBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      service_ = "";
      serviceInstance_ = "";
      isSizeLimited_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tracing.network.language.tracing.Tracing.internal_static_deeptracing_v1_SegmentObject_descriptor;
    }

    @java.lang.Override
    public org.tracing.network.language.tracing.SegmentObject getDefaultInstanceForType() {
      return org.tracing.network.language.tracing.SegmentObject.getDefaultInstance();
    }

    @java.lang.Override
    public org.tracing.network.language.tracing.SegmentObject build() {
      org.tracing.network.language.tracing.SegmentObject result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tracing.network.language.tracing.SegmentObject buildPartial() {
      org.tracing.network.language.tracing.SegmentObject result = new org.tracing.network.language.tracing.SegmentObject(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(org.tracing.network.language.tracing.SegmentObject result) {
      if (spansBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          spans_ = java.util.Collections.unmodifiableList(spans_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.spans_ = spans_;
      } else {
        result.spans_ = spansBuilder_.build();
      }
    }

    private void buildPartial0(org.tracing.network.language.tracing.SegmentObject result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.traceId_ = traceId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.traceSegmentId_ = traceSegmentId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.service_ = service_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.serviceInstance_ = serviceInstance_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.isSizeLimited_ = isSizeLimited_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tracing.network.language.tracing.SegmentObject) {
        return mergeFrom((org.tracing.network.language.tracing.SegmentObject)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tracing.network.language.tracing.SegmentObject other) {
      if (other == org.tracing.network.language.tracing.SegmentObject.getDefaultInstance()) return this;
      if (!other.getTraceId().isEmpty()) {
        traceId_ = other.traceId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getTraceSegmentId().isEmpty()) {
        traceSegmentId_ = other.traceSegmentId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (spansBuilder_ == null) {
        if (!other.spans_.isEmpty()) {
          if (spans_.isEmpty()) {
            spans_ = other.spans_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSpansIsMutable();
            spans_.addAll(other.spans_);
          }
          onChanged();
        }
      } else {
        if (!other.spans_.isEmpty()) {
          if (spansBuilder_.isEmpty()) {
            spansBuilder_.dispose();
            spansBuilder_ = null;
            spans_ = other.spans_;
            bitField0_ = (bitField0_ & ~0x00000004);
            spansBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSpansFieldBuilder() : null;
          } else {
            spansBuilder_.addAllMessages(other.spans_);
          }
        }
      }
      if (!other.getService().isEmpty()) {
        service_ = other.service_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getServiceInstance().isEmpty()) {
        serviceInstance_ = other.serviceInstance_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getIsSizeLimited() != false) {
        setIsSizeLimited(other.getIsSizeLimited());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              traceId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              traceSegmentId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              org.tracing.network.language.tracing.SpanObject m =
                  input.readMessage(
                      org.tracing.network.language.tracing.SpanObject.parser(),
                      extensionRegistry);
              if (spansBuilder_ == null) {
                ensureSpansIsMutable();
                spans_.add(m);
              } else {
                spansBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              service_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              serviceInstance_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              isSizeLimited_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object traceId_ = "";
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The traceId.
     */
    public java.lang.String getTraceId() {
      java.lang.Object ref = traceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return The bytes for traceId.
     */
    public com.google.protobuf.ByteString
        getTraceIdBytes() {
      java.lang.Object ref = traceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @param value The traceId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      traceId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceId() {
      traceId_ = getDefaultInstance().getTraceId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A string id represents the whole trace.
     * </pre>
     *
     * <code>string traceId = 1;</code>
     * @param value The bytes for traceId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      traceId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object traceSegmentId_ = "";
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The traceSegmentId.
     */
    public java.lang.String getTraceSegmentId() {
      java.lang.Object ref = traceSegmentId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        traceSegmentId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return The bytes for traceSegmentId.
     */
    public com.google.protobuf.ByteString
        getTraceSegmentIdBytes() {
      java.lang.Object ref = traceSegmentId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traceSegmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @param value The traceSegmentId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceSegmentId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      traceSegmentId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTraceSegmentId() {
      traceSegmentId_ = getDefaultInstance().getTraceSegmentId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique id represents this segment. Other segments could use this id to reference as a child segment.
     * </pre>
     *
     * <code>string traceSegmentId = 2;</code>
     * @param value The bytes for traceSegmentId to set.
     * @return This builder for chaining.
     */
    public Builder setTraceSegmentIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      traceSegmentId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.util.List<org.tracing.network.language.tracing.SpanObject> spans_ =
      java.util.Collections.emptyList();
    private void ensureSpansIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        spans_ = new java.util.ArrayList<org.tracing.network.language.tracing.SpanObject>(spans_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tracing.network.language.tracing.SpanObject, org.tracing.network.language.tracing.SpanObject.Builder, org.tracing.network.language.tracing.SpanObjectOrBuilder> spansBuilder_;

    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public java.util.List<org.tracing.network.language.tracing.SpanObject> getSpansList() {
      if (spansBuilder_ == null) {
        return java.util.Collections.unmodifiableList(spans_);
      } else {
        return spansBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public int getSpansCount() {
      if (spansBuilder_ == null) {
        return spans_.size();
      } else {
        return spansBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public org.tracing.network.language.tracing.SpanObject getSpans(int index) {
      if (spansBuilder_ == null) {
        return spans_.get(index);
      } else {
        return spansBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder setSpans(
        int index, org.tracing.network.language.tracing.SpanObject value) {
      if (spansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpansIsMutable();
        spans_.set(index, value);
        onChanged();
      } else {
        spansBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder setSpans(
        int index, org.tracing.network.language.tracing.SpanObject.Builder builderForValue) {
      if (spansBuilder_ == null) {
        ensureSpansIsMutable();
        spans_.set(index, builderForValue.build());
        onChanged();
      } else {
        spansBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder addSpans(org.tracing.network.language.tracing.SpanObject value) {
      if (spansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpansIsMutable();
        spans_.add(value);
        onChanged();
      } else {
        spansBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder addSpans(
        int index, org.tracing.network.language.tracing.SpanObject value) {
      if (spansBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSpansIsMutable();
        spans_.add(index, value);
        onChanged();
      } else {
        spansBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder addSpans(
        org.tracing.network.language.tracing.SpanObject.Builder builderForValue) {
      if (spansBuilder_ == null) {
        ensureSpansIsMutable();
        spans_.add(builderForValue.build());
        onChanged();
      } else {
        spansBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder addSpans(
        int index, org.tracing.network.language.tracing.SpanObject.Builder builderForValue) {
      if (spansBuilder_ == null) {
        ensureSpansIsMutable();
        spans_.add(index, builderForValue.build());
        onChanged();
      } else {
        spansBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder addAllSpans(
        java.lang.Iterable<? extends org.tracing.network.language.tracing.SpanObject> values) {
      if (spansBuilder_ == null) {
        ensureSpansIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, spans_);
        onChanged();
      } else {
        spansBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder clearSpans() {
      if (spansBuilder_ == null) {
        spans_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        spansBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public Builder removeSpans(int index) {
      if (spansBuilder_ == null) {
        ensureSpansIsMutable();
        spans_.remove(index);
        onChanged();
      } else {
        spansBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public org.tracing.network.language.tracing.SpanObject.Builder getSpansBuilder(
        int index) {
      return getSpansFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public org.tracing.network.language.tracing.SpanObjectOrBuilder getSpansOrBuilder(
        int index) {
      if (spansBuilder_ == null) {
        return spans_.get(index);  } else {
        return spansBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public java.util.List<? extends org.tracing.network.language.tracing.SpanObjectOrBuilder> 
         getSpansOrBuilderList() {
      if (spansBuilder_ != null) {
        return spansBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(spans_);
      }
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public org.tracing.network.language.tracing.SpanObject.Builder addSpansBuilder() {
      return getSpansFieldBuilder().addBuilder(
          org.tracing.network.language.tracing.SpanObject.getDefaultInstance());
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public org.tracing.network.language.tracing.SpanObject.Builder addSpansBuilder(
        int index) {
      return getSpansFieldBuilder().addBuilder(
          index, org.tracing.network.language.tracing.SpanObject.getDefaultInstance());
    }
    /**
     * <pre>
     * Span collections included in this segment.
     * </pre>
     *
     * <code>repeated .deeptracing.v1.SpanObject spans = 3;</code>
     */
    public java.util.List<org.tracing.network.language.tracing.SpanObject.Builder> 
         getSpansBuilderList() {
      return getSpansFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tracing.network.language.tracing.SpanObject, org.tracing.network.language.tracing.SpanObject.Builder, org.tracing.network.language.tracing.SpanObjectOrBuilder> 
        getSpansFieldBuilder() {
      if (spansBuilder_ == null) {
        spansBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tracing.network.language.tracing.SpanObject, org.tracing.network.language.tracing.SpanObject.Builder, org.tracing.network.language.tracing.SpanObjectOrBuilder>(
                spans_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        spans_ = null;
      }
      return spansBuilder_;
    }

    private java.lang.Object service_ = "";
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     *
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The service.
     */
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        service_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     *
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return The bytes for service.
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     *
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @param value The service to set.
     * @return This builder for chaining.
     */
    public Builder setService(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      service_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     *
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearService() {
      service_ = getDefaultInstance().getService();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * **Service**. Represents a set/group of workloads which provide the same behaviours for incoming requests.
     *
     * The logic name represents the service. This would show as a separate node in the topology.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service level.
     * </pre>
     *
     * <code>string service = 4;</code>
     * @param value The bytes for service to set.
     * @return This builder for chaining.
     */
    public Builder setServiceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      service_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object serviceInstance_ = "";
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     *
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The serviceInstance.
     */
    public java.lang.String getServiceInstance() {
      java.lang.Object ref = serviceInstance_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serviceInstance_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     *
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return The bytes for serviceInstance.
     */
    public com.google.protobuf.ByteString
        getServiceInstanceBytes() {
      java.lang.Object ref = serviceInstance_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serviceInstance_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     *
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @param value The serviceInstance to set.
     * @return This builder for chaining.
     */
    public Builder setServiceInstance(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      serviceInstance_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     *
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearServiceInstance() {
      serviceInstance_ = getDefaultInstance().getServiceInstance();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * **Service Instance**. Each individual workload in the Service group is known as an instance. Like `pods` in Kubernetes, it
     * doesn't need to be a single OS process, however, if you are using instrument agents, an instance is actually a real OS process.
     *
     * The logic name represents the service instance. This would show as a separate node in the instance relationship.
     * The metrics analyzed from the spans, would be aggregated for this entity as the service instance level.
     * </pre>
     *
     * <code>string serviceInstance = 5;</code>
     * @param value The bytes for serviceInstance to set.
     * @return This builder for chaining.
     */
    public Builder setServiceInstanceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      serviceInstance_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private boolean isSizeLimited_ ;
    /**
     * <pre>
     * Whether the segment includes all tracked spans.
     * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
     * The agent/SDK could optimize or ignore some tracked spans for better performance.
     * In this case, the value should be flagged as TRUE.
     * </pre>
     *
     * <code>bool isSizeLimited = 6;</code>
     * @return The isSizeLimited.
     */
    @java.lang.Override
    public boolean getIsSizeLimited() {
      return isSizeLimited_;
    }
    /**
     * <pre>
     * Whether the segment includes all tracked spans.
     * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
     * The agent/SDK could optimize or ignore some tracked spans for better performance.
     * In this case, the value should be flagged as TRUE.
     * </pre>
     *
     * <code>bool isSizeLimited = 6;</code>
     * @param value The isSizeLimited to set.
     * @return This builder for chaining.
     */
    public Builder setIsSizeLimited(boolean value) {

      isSizeLimited_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the segment includes all tracked spans.
     * In the production environment tracked, some tasks could include too many spans for one request context, such as a batch update for a cache, or an async job.
     * The agent/SDK could optimize or ignore some tracked spans for better performance.
     * In this case, the value should be flagged as TRUE.
     * </pre>
     *
     * <code>bool isSizeLimited = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsSizeLimited() {
      bitField0_ = (bitField0_ & ~0x00000020);
      isSizeLimited_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:deeptracing.v1.SegmentObject)
  }

  // @@protoc_insertion_point(class_scope:deeptracing.v1.SegmentObject)
  private static final org.tracing.network.language.tracing.SegmentObject DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tracing.network.language.tracing.SegmentObject();
  }

  public static org.tracing.network.language.tracing.SegmentObject getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SegmentObject>
      PARSER = new com.google.protobuf.AbstractParser<SegmentObject>() {
    @java.lang.Override
    public SegmentObject parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SegmentObject> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SegmentObject> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tracing.network.language.tracing.SegmentObject getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

